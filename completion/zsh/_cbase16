#compdef cbase16

(( $+function[_list_templates] )) ||
_list_templates() {
	local -a templates
	templates=($(cbase16 list -t -r))
	_describe 'template' templates
}

(( $+function[_list_schemes] )) ||
_list_schemes() {
	local -a schemes
	schemes=($(cbase16 list -s -r))
	_describe 'scheme' schemes
}

(( $+function[_cbase16_update] )) ||
_cbase16_update() {
	_arguments -C \
		'-c[set cache directory]:directory:_directories'
}

(( $+function[_cbase16_build] )) ||
_cbase16_build() {
	_arguments -C \
		'-c[set cache directory]:directory:_directories' \
		'-s[only build specified schemes]:scheme:_list_schemes' \
		'-t[only build specified templates]:template:_list_templates' \
		'-o[set output directory]:directory:_directories'
}

(( $+function[_cbase16_build] )) ||
_cbase16_make() {
	_arguments -C \
		'-c[set cache directory]:directory:_directories' \
		'-s[only build specified schemes]:scheme:_list_schemes' \
		'-t[only build specified templates]:template:_list_templates' \
		'-o[set output directory]:directory:_directories'
}

(( $+function[_cbase16_list] )) ||
_cbase16_list() {
	_arguments -C \
		'-s[display schemes only]' \
		'-t[display templates only]' \
		'-r[print items in a single column]' \
}

(( $+functions[_cbase16_commands] )) ||
_cbase16_commmands() {
	local -a _cbase16_commands
	_cbase16_commands=(
		'update:fetch all necessary sources for building'
		'build:generate colorscheme templates'
		'make:build current directory'
		'list:display available schemes and templates'
		'version:display version'
		'help:display usage message'
	)

	if (( CURRENT == 1 )); then
		_describe "command" _cbase16_commands || compadd "$@"
	else
		local curcontext="$curcontext" _ignore

		cmd="${${_cbase16_commands[(r)$words[1]:*]%%:*}}"

		if (( $#cmd )); then
			curcontext="${curcontext%:*:*}:cbase16-${cmd}:"

			_call_function ret _cbase16_$cmd || _message 'no more arguments'
		else
			_message "unknown cbase16 command: $words[1]"
		fi
		return ret
	fi
}

_arguments -s \
	'*::cbase16 command:_cbase16_commmands'
